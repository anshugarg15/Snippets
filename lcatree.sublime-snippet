<snippet>
	<content><![CDATA[
vector<ll> v[100005];
bool vis[100005];
ll d[100005],p[100005][20];
void dfs(ll s)
{
	vis[s]=true;
	for(auto j:v[s])
	{
		if(!vis[j])
		{
			d[j]=d[s]+1;p[j][0]=s;
			dfs(j);
		}
	}
}
void sparseMatrix(ll n)
{
	for(ll i=1;i<level;++i)
	{
		for(ll j=1;j<=n;++j)
		{
			if(p[j][i-1]!=-1)
				p[j][i]=p[p[j][i-1]][i-1];
		}
	}
}
ll lca(ll u,ll v)
{
	if(d[u]>d[v])swap(u,v);
	ll df=d[v]-d[u];
	for(ll i=0;i<level;++i)
		if(df&(1<<i))v=p[v][i];
	if(u==v)return u;
	for (ll i=level-1; i>=0; i--) 
	{
        if (p[u][i] != p[v][i]) 
        { 
            u = p[u][i]; 
            v = p[v][i]; 
        } 
  	}
    return p[u][0]; 
}
ll pl(ll a,ll b)
{
	return d[a]+d[b]-2*d[lca(a,b)];
}
void in(ll n)
{
	mem1(p);
	d[1]=0;
	dfs(1);
	sparseMatrix(n);
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>lcatree</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
