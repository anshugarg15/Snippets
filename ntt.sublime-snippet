<snippet>
	<content><![CDATA[
const int mod = 998244353;
const int root = 565042129;
const int inv_root = 950391366;
const int root_pw = 1<<20 ;
void fft(ll a[],bool invert,int n)
{
	for(int i=1,j=0 ; i<n ;++i)
	{
		int bit=n>>1;
		for(;j>=bit;bit>>=1)
			j-=bit;
		j+=bit;
		if(i<j)
			swap(a[i],a[j]);
	}
	for(int len=2;len<=n;len<<=1)
	{
		ll w_len=invert?inv_root:root;
		for(int i=len;i<root_pw;i<<=1)
			w_len=(w_len*w_len)%mod;
		// 2**20 root ko use karke koi bhi 2**i (i<20)root nikala jaa sakta hai bas power
		// raise karke aur yahi kia hai yaha
		// aadhe root power karke aa jaenge baaki unke negative hote hai just .. its that easy bro
		for(int i=0;i<n;i+=len)
		{
			ll w=1;
			for(int j=0;j<len/2;++j)
			{
				ll u=a[i+j],v=a[i+j+len/2]*w%mod;
				a[i+j]=u+v<mod?u+v:u+v-mod;
				a[i+j+len/2]=u-v<0?u-v+mod:u-v;
				w*=w_len;
				w%=mod;
			}
		}
	}
	if(invert){
		ll inv_n=power(n,mod-2,mod);
		for(int i=0;i<n;++i)
		{
			a[i]*=inv_n;a[i]%=mod;
		}
	}
}
void multiply(const vector<ll> &a,const vector<ll> &b,vector<ll> &res)
{
	vector<ll> fa(all(a)),fb(all(b));
	int x=max((int)a.size(),(int)b.size());
	int n=1;
	while(n<x)n<<=1;
	n<<=1;
	fa.resize(n),fb.resize(n);
	fft(fa,false);fft(fb,false);
	for(int i=0;i<n;++i)
	{
		fa[i]*=fb[i];
		fa[i]%=mod;
	}
	fft(fa,true);
	res.resize(n);
	for(int i=0;i<n;++i)
		res[i]=fa[i];
}
void power(ll poly[],ll pw,ll n)
{
	fft(poly,false,n);
	for(int i=0;i<n;++i)
		poly[i]=power(poly[i],pw,mod);
	fft(poly,true,n);
}]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>ntt</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
